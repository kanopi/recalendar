<?php

/**
 * @file
 * Functions and hooks for Recalendar module.
 */
function recalendar_page_attachments(array &$page) {

  // Caching.
  $variables['page']['#cache']['contexts'][] = 'route';

  // Attach recalendar library assets.
  if (\Drupal::routeMatch()->getRouteName() == 'recalendar.events') {
    $page['#attached']['library'][] = 'recalendar/eventscalendar';
  }
}

/**
 * Implements hook_rebuild().
 */
function recalendar_rebuild() {

  // Get the view results
  $viewId = 'recalendar';
  $displayId = 'rest_export_1';

  // Get the view
  \Drupal\views\Views::getView($viewId, $displayId);

}

/**
 * Implements hook_cron().
 * Exports results of recalendar view to file for enhanced performance.
 */
 function recalendar_cron() {

  $view_id = 'recalendar';
  $display_events = 'rest_export_1';

  $view_events = \Drupal\views\Views::getView($view_id);

  $view_events->setDisplay($display_events);

  // Create and designate the directory.
  $directory = 'public://data/';
  Drupal\Core\File\FileSystemInterface::prepareDirectory($directory, Drupal\Core\File\FileSystemInterface::CREATE_DIRECTORY);


  $view_events_out = $view_events->render();
  $events = $view_events_out['#markup']->__toString();

   // Save view data export to file.
   Drupal\Core\File\FileSystemInterface::saveData($events, $directory . 'data_export_events.json', Drupal\Core\File\FileSystemInterface::EXISTS_REPLACE);

 }
